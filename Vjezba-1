/* Napisati program koji prvo pročita koliko redaka ima datoteka, tj. koliko ima studenata
zapisanih u datoteci. Nakon toga potrebno je dinamički alocirati prostor za niz struktura
studenata (ime, prezime, bodovi) i učitati iz datoteke sve zapise. Na ekran ispisati ime,
prezime,apsolutni i relativni broj bodova.
Napomena: Svaki redak datoteke sadrži ime i prezime studenta, te broj bodova na kolokviju.
relatvan_br_bodova = br_bodova/max_br_bodova*100 */

#include <stdio.h> 
#include <stdlib.h>
#include <malloc.h>
#define ERR (-1)
#define MAX_NAME 256

typedef struct _stud
{
	char FirstName[MAX_NAME];
	char LastName[MAX_NAME];
	int result;
}student;

int BrojanjeRedaka();
int Unos(_stud*);
int Ispis(_stud*, int);

int main() {
	
	_stud *a;
	int br, pom_unos, pom_ispis;

	//Broj redaka u datoteci student.txt
	br = BrojanjeRedaka();

	if (br == ERR)
		printf("Datoteka nije otvorena!(br.redaka)");


	//Dinamička alokacija strukture u koju spremamo podatke
	a = (_stud*) malloc(br * sizeof(_stud));

	//Pozivanje funkcije za Unos
	pom_unos = Unos(a);

	if (pom_unos == ERR)
		printf("Datoteka nije otvorena!(unos)");

	//Pozivanje funkcije za Ispis
	pom_ispis = Ispis(a, br);

	if (pom_ispis != 0)
		printf("Kraljice.... Neće ispis!");

		free(a);

	return 0;

}

int BrojanjeRedaka() {

	FILE* fp = fopen("student.txt", "r");
	int brojac = 0;

	if (fp == NULL)
	{
		printf("Kraljice ne radi ti ovo....");
		return ERR;
	}

	//Vraćanje na početak u datoteci
	//Ovo je dobro napraviti jer ne znamo gdje se nalazimo u njoj pa je dobro vratit se na pocetak
	rewind(fp);

	while (!feof(fp))
	{
		brojac++;
	}
	fclose(fp);

	return brojac;

}

int Unos(_stud* a) {

	//Otvaranje datoteke
	
	FILE* fp = fopen("student.txt", "r");
	int brojac = 0;

	if (fp == NULL)
	{
		printf("Kraljice ne radi ti ovo....");
		return ERR;
	}
	
	//Vraćanje na početak u datoteci
	rewind(fp);

	//Unos 
	fscanf(fp, "%s %s %d", a->FirstName, a->LastName, &a->result);


	fclose(fp);

	return 0;
}

int Ispis(_stud* a, int br) {
	int i;

	for (i = 0; i < br; i++)
		printf("%s %s %d %.2f", a->FirstName, a->LastName, a->result, (float)(a->result / 50) * 100);

	return 0;
}
